import streamlit as st
import pickle
import numpy as np
import pandas as pd

st.set_page_config(page_title="Stres Tahmin UygulamasÄ±", layout="centered")
st.title("ğŸ§  Stres Tahmin UygulamasÄ±")
st.markdown("Bu uygulama, belirli psikolojik ve davranÄ±ÅŸsal Ã¶lÃ§Ã¼tlere gÃ¶re kiÅŸinin stresli olup olmadÄ±ÄŸÄ±nÄ± tahmin eder.")

# Ã–zellik aÃ§Ä±klamalarÄ± ve TÃ¼rkÃ§e baÅŸlÄ±klar
feature_map = {
    'cesd': ('Depresyon Skoru (CES-D)', '70 Ã¼zeri â†’ yÃ¼ksek depresyon riski'),
    'mbi_ex': ('Duygusal TÃ¼kenmiÅŸlik (MBI-EX)', '80 Ã¼zeri â†’ yÃ¼ksek tÃ¼kenmiÅŸlik'),
    'mbi_ea': ('Empati AzalmasÄ± (MBI-EA)', '60 Ã¼zeri â†’ empati kaybÄ± olabilir'),
    'health': ('Kendi SaÄŸlÄ±k DeÄŸerlendirmesi', '70 Ã¼zeri â†’ saÄŸlÄ±k algÄ±sÄ± dÃ¼ÅŸmÃ¼ÅŸ olabilir'),
    'mbi_cy': ('Sorgulama/DuyarsÄ±zlaÅŸma (MBI-CY)', '80 Ã¼zeri â†’ duyarsÄ±zlaÅŸma artabilir')
}

st.sidebar.header("ğŸ”§ Girdi DeÄŸerleri")
user_input = {}

for key, (label, desc) in feature_map.items():
    value = st.sidebar.slider(label, min_value=0, max_value=100, value=50)
    st.sidebar.caption(desc)
    user_input[key] = value

input_df = pd.DataFrame([user_input], columns=feature_map.keys())


with open("model.pkl", "rb") as f:
    model = pickle.load(f)

with open("scaler.pkl", "rb") as f:
    scaler = pickle.load(f)


input_scaled = scaler.transform(input_df)
prediction = model.predict(input_scaled)[0]

# Tahmin sonucu gÃ¶ster
st.subheader("ğŸ“Š Tahmin Sonucu:")
if prediction == 1:
    st.error("ğŸ”´ Tahmin: **Stresli**")
else:
    st.success("ğŸŸ¢ Tahmin: **Stresli DeÄŸil**")

st.markdown("---")
st.caption("Model: KNN (Korelasyon ile seÃ§ilen 5 Ã¶zellik kullanÄ±larak eÄŸitildi)")
